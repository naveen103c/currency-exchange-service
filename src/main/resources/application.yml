server:
  port: 9081
spring:
  application:
    name: CURRENCY-EXCHANGE-SERVICE
  config:
    import: optional:configserver:http://localhost:8888
  profile:
    active: dev
  kafka:
    topic:
      name: currency_exchange_topic
    consumer:
      bootstrap-servers: localhost:9092
      group-id: forex
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#      properties:
#        spring:
#          json:
#            trusted:
#              packages: *
#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    fetch-registry: true
#    register-with-eureka: true
#    service-url:
#      default-zone: http://localhost:8761/eureka

#server.port=9091
#spring.application.name=currency-exchange-service
#
#eureka.client.service-url.default-zone=http://localhost:8761/eureka

#Database Setup H2
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.url=jdbc:h2:file:/practice/H2database/currency
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.h2.console.enabled=true
#spring.jpa.show-sql = true
#spring.jpa.hibernate.ddl-auto = update
#
##By default, data.sql scripts get executed before the Hibernate is initialized. We need Hibernate to create our tables before inserting the data into them. To achieve this, we need to defer the initialization of our data source. We?ll use the below property to achieve this:
#spring.jpa.defer-datasource-initialization=true

